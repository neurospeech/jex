import { XNode } from "./dist/index.js";
import { Batch, Run, invoke, Log } from "./dist/index.js";
let version = "";
invoke(XNode.create(Batch, null, () => "\n\n    ", () => XNode.create(Run, {
  cmd: "node",
  args: ["--version"],
  logData: false,
  finished: x => version = x.text.trim()
}), () => "\n\n    ", () => (version = version + "...", null), () => "\n\n    ", () => XNode.create(Log, {
  text: version
}), () => "\n\n    ", () => "\n    Running Node Directly...\n\n    ", () => XNode.create(Run, {
  cmd: "node",
  args: "--version"
}), () => "\n    \n"));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJYTm9kZSIsIkJhdGNoIiwiUnVuIiwiaW52b2tlIiwiTG9nIiwidmVyc2lvbiIsImNyZWF0ZSIsImNtZCIsImFyZ3MiLCJsb2dEYXRhIiwiZmluaXNoZWQiLCJ4IiwidGV4dCIsInRyaW0iXSwic291cmNlcyI6WyJ1bmtub3duIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFhOb2RlIH0gZnJvbSBcIi4vZGlzdC9pbmRleC5qc1wiO2ltcG9ydCB7IEJhdGNoLCBSdW4sIGludm9rZSwgTG9nIH0gZnJvbSBcIi4vZGlzdC9pbmRleC5qc1wiO1xyXG5cclxubGV0IHZlcnNpb24gPSBcIlwiO1xyXG5cclxuaW52b2tlKDxCYXRjaD5cclxuXHJcbiAgICA8UnVuXHJcbiAgICAgICAgY21kPVwibm9kZVwiXHJcbiAgICAgICAgYXJncz17W1wiLS12ZXJzaW9uXCJdfVxyXG4gICAgICAgIGxvZ0RhdGE9e2ZhbHNlfVxyXG4gICAgICAgIGZpbmlzaGVkPXsoeCkgPT4gdmVyc2lvbiA9IHgudGV4dC50cmltKCkgfVxyXG4gICAgICAgIC8+XHJcblxyXG4gICAge1xyXG4gICAgICAgIC8qKiBFeGVjdXRlIENvZGUgaW4gdGhlIGN1cmx5IGJyYWNlcywgdGhpcyB3aWxsIG5vdCBiZSBwcmludGVkLiAqL1xyXG4gICAgICAgIHZlcnNpb24gPSB2ZXJzaW9uICsgXCIuLi5cIlxyXG4gICAgfVxyXG5cclxuICAgIDxMb2dcclxuICAgICAgICB0ZXh0PXt2ZXJzaW9ufVxyXG4gICAgICAgIC8+XHJcblxyXG4gICAgeyAvKiogUHJpbnQgZm9sbG93aW5nIHRleHQgZGlyZWN0bHkgb24gY29uc29sZS4uLiAqL31cclxuICAgIFJ1bm5pbmcgTm9kZSBEaXJlY3RseS4uLlxyXG5cclxuICAgIDxSdW5cclxuICAgICAgICBjbWQ9XCJub2RlXCJcclxuICAgICAgICBhcmdzPVwiLS12ZXJzaW9uXCJcclxuICAgICAgICAvPlxyXG4gICAgXHJcbjwvQmF0Y2g+KSJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsS0FBSyxRQUFRLGlCQUFpQjtBQUFDLFNBQVNDLEtBQUssRUFBRUMsR0FBRyxFQUFFQyxNQUFNLEVBQUVDLEdBQUcsUUFBUSxpQkFBaUI7QUFFakcsSUFBSUMsT0FBTyxHQUFHLEVBQUU7QUFFaEJGLE1BQU0sQ0FBQ0gsS0FBQSxDQUFBTSxNQUFBLENBQUNMLEtBQUssZ0NBRVRELEtBQUEsQ0FBQU0sTUFBQSxDQUFDSixHQUFHO0VBQ0FLLEdBQUcsRUFBQyxNQUFNO0VBQ1ZDLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBRTtFQUNwQkMsT0FBTyxFQUFFLEtBQU07RUFDZkMsUUFBUSxFQUFHQyxDQUFDLElBQUtOLE9BQU8sR0FBR00sQ0FBQyxDQUFDQyxJQUFJLENBQUNDLElBQUksQ0FBQztBQUFHLENBQ3pDLENBQUMsMkJBSUZSLE9BQU8sR0FBR0EsT0FBTyxHQUFHLEtBQUssaUNBRzdCTCxLQUFBLENBQUFNLE1BQUEsQ0FBQ0YsR0FBRztFQUNBUSxJQUFJLEVBQUVQO0FBQVEsQ0FDYixDQUFDLDBFQUtOTCxLQUFBLENBQUFNLE1BQUEsQ0FBQ0osR0FBRztFQUNBSyxHQUFHLEVBQUMsTUFBTTtFQUNWQyxJQUFJLEVBQUM7QUFBVyxDQUNmLENBQUMsa0JBRUgsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119